# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/author-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

# Version of the porter.yaml schema used by this file.
schemaVersion: 1.0.0-alpha.1

name: hbase-bundle
version: 0.1.0
description: "An example Porter configuration"
# registry where the bundle is published to by default
registry: "localhost:5000"

# If you want to customize the Dockerfile in use, uncomment the line below and update the referenced file. 
# See https://porter.sh/bundle/custom-dockerfile/
dockerfile: template.Dockerfile

mixins:
  - helm3:
      clientVersion: v3.9.0
      repositories:
        stackable:
          url: "https://repo.stackable.tech/repository/helm-stable/"
  - kubernetes
  - exec

parameters:
  - name: namespace
    type: string
    default: fct-tst-hbase
  - name: target-pod
    type: string
    default: hbase-interactive

credentials:
  - name: kubeconfig
    path: /home/nonroot/.kube/config

install:
  - exec:
      description: "Build .jar"
      command: ./jar-build.sh
  - exec:
      description: "Check connectivity"
      command: kubectl
      arguments:
        - get
        - nodes
  - helm3:
      description: "Install Operator Zookeeper"
      name: zookeeper-operator
      chart: stackable/zookeeper-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Install Operator Secret"
      name: secret-operator
      chart: stackable/secret-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Install Operator Commons"
      name: commons-operator
      chart: stackable/commons-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Install Operators hdfs"
      name: hdfs-operator
      chart: stackable/hdfs-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Install Operators hbase"
      name: hbase-operator
      chart: stackable/hbase-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - kubernetes:
      description: "deploy operator"
      manifests:
        - kubernetes/manifest/deploy-zk.yaml
        - kubernetes/manifest/deploy-hdfs.yaml
        - kubernetes/manifest/deploy-hbase.yaml
      namespace: "{{ bundle.parameters.namespace }}"
      wait: true


upgrade:
  - exec:
      description: "Check connectivity"
      command: kubectl
      arguments:
        - get
        - nodes
  - helm3:
      description: "Upgrade Operator Zookeeper"
      name: zookeeper-operator
      chart: stackable/zookeeper-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Upgrade Operator Secret"
      name: secret-operator
      chart: stackable/secret-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Upgrade Operator Commons"
      name: commons-operator
      chart: stackable/commons-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Upgrade Operators hdfs"
      name: hdfs-operator
      chart: stackable/hdfs-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Upgrade Operators hbase"
      name: hbase-operator
      chart: stackable/hbase-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - kubernetes:
      description: "Upgrade operator"
      manifests:
        - kubernetes/manifest/deploy-zk.yaml
        - kubernetes/manifest/deploy-hdfs.yaml
        - kubernetes/manifest/deploy-hbase.yaml
      namespace: "{{ bundle.parameters.namespace }}"
      wait: true


uninstall:
  - exec:
      description: "Check connectivity"
      command: kubectl
      arguments:
        - get
        - nodes
  - helm3:
      description: "Uninstall Operator Zookeeper"
      name: zookeeper-operator
      chart: stackable/zookeeper-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Uninstall Operator Secret"
      name: secret-operator
      chart: stackable/secret-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Uninstall Operator Commons"
      name: commons-operator
      chart: stackable/commons-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Uninstall Operators hdfs"
      name: hdfs-operator
      chart: stackable/hdfs-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - helm3:
      description: "Uninstall Operators hbase"
      name: hbase-operator
      chart: stackable/hbase-operator
      namespace: "{{ bundle.parameters.namespace }}"
  - kubernetes:
      description: "Uninstall operator"
      manifests:
        - kubernetes/manifest/deploy-zk.yaml
        - kubernetes/manifest/deploy-hdfs.yaml
        - kubernetes/manifest/deploy-hbase.yaml
      namespace: "{{ bundle.parameters.namespace }}"
      wait: true



# Below is an example of how to define state variables
# for the terraform mixin. This allows you to track
# terraform state using the bundle instead of configuring
# a remote backend.
# See https://porter.sh/author-bundles/#state
#state:
#  - name: tfstate
#    path: terraform/terraform.tfstate
#  - name: tfvars
#    path: terraform/terraform.tfvars.json
