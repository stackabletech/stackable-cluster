apiVersion: kuttl.dev/v1beta1
kind: TestStep
metadata:
  name: install-zk-hdfs-hbase-spark
timeout: 180
---
apiVersion: zookeeper.stackable.tech/v1alpha1
kind: ZookeeperCluster
metadata:
  name: zk
spec:
  servers:
    roleGroups:
      primary:
        replicas: 2
        config:
          myidOffset: 10
      secondary:
        replicas: 1
        config:
          myidOffset: 20
  version: 3.5.8
  stopped: false
---
apiVersion: zookeeper.stackable.tech/v1alpha1
kind: ZookeeperZnode
metadata:
  name: znode
spec:
  clusterRef:
    name: zk
---
apiVersion: hdfs.stackable.tech/v1alpha1
kind: HdfsCluster
metadata:
  name: hdfs
spec:
  version: 3.2.2
  zookeeperConfigMapName: znode
  dfsReplication: 1
  log4j: |-
    # Define some default values that can be overridden by system properties
    hadoop.root.logger=INFO,console
    hadoop.log.dir=.
    hadoop.log.file=hadoop.log
    # Define the root logger to the system property "hadoop.root.logger".
    log4j.rootLogger=${hadoop.root.logger}, EventCounter
    # Logging Threshold
    log4j.threshold=ALL
    log4j.appender.console=org.apache.log4j.ConsoleAppender
    log4j.appender.console.target=System.err
    log4j.appender.console.layout=org.apache.log4j.PatternLayout
    log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n
    log4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter
  nameNodes:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
        replicas: 2
  dataNodes:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
        replicas: 1
  journalNodes:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
        replicas: 1
---
apiVersion: spark.stackable.tech/v1alpha1
kind: SparkCluster
metadata:
  name: spark
spec:
  version: "3.0.1"
  masters:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
        replicas: 1
  workers:
    roleGroups:
      2core2g:
        selector:
          matchLabels:
            kubernetes.io/os: linux
        replicas: 1
        config:
          cores: 2
          memory: "2g"
  historyServers:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
        replicas: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: webhdfs
  labels:
    app: webhdfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhdfs
  template:
    metadata:
      labels:
        app: webhdfs
    spec:
      containers:
        - name: webhdfs
          image: python:3.10-slim
          stdin: true
          tty: true
#---
#apiVersion: hbase.stackable.tech/v1alpha1
#kind: HbaseCluster
#metadata:
#  name: hbase
#spec:
#  version: 2.4.9
#  config:
#    hdfsConfigMapName: hdfs-namenode-default
#    zookeeperConfigMapName: znode
#    hbaseManagesZk: false
#    hbaseClusterDistributed: true
#    hbaseRootdir: hdfs://hdfs/hbase
#  masters:
#    roleGroups:
#      default:
#        replicas: 1
#  regionServers:
#    roleGroups:
#      default:
#        replicas: 1
#  restServers:
#    roleGroups:
#      default:
#        replicas: 1